import { createAsyncThunk, createSlice, PayloadAction } from "@reduxjs/toolkit";
import { RootState, AppDispatch, AppThunk } from "../store";
import axios from "axios";
import { RoleInter } from "../../interface/RoleInterface";

export interface RoleState {
  roleList?: RoleInter[];
}

const initialState: RoleState = {
  roleList: [],
};

export const getRoleList = createAsyncThunk("role/verifyToken", async () => {
  const res = await axios.get("/role");
  // The value we return becomes the `fulfilled` action payload
  return res.data.data;
});

export const roleSlice = createSlice({
  name: "role",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder.addCase(getRoleList.fulfilled, (state, action) => {
      state.roleList = action.payload;
    });
    builder.addCase(getRoleList.rejected, (state, action) => {
      console.log("rejected");
      throw Error("getRoleList in redux failed");
    });
  },
});

export const {} = roleSlice.actions;
// !!!CAUTION!!! select中state后面要接reducer名，而不是slice名
export const selectRoleList = (state: RootState) => state.roleReducer.roleList;

export default roleSlice.reducer;
